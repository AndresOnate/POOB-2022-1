#BlueJ class context
comment0.target=Set
comment0.text=\r\n\ \r\n\ @author\ Nicolas\ Ariza,\ Andres\ O\u00F1ate\r\n\ @version\ 1.0\ (15\ february\ 2022)\r\n
comment1.params=elements
comment1.target=Set(java.lang.String[])
comment1.text=\r\n\ Set\ class\ constructor\r\n\ @param\ elements\ Son\ los\ elementos\ que\ forman\ parte\ del\ conjunto.\r\n
comment10.params=a
comment10.target=boolean\ equals(Set)
comment10.text=\r\n\ @return\ equals\ Determina\ si\ dos\ conjuntos\ son\ iguales.\r\n
comment11.params=a
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\r\n\ @return\ equals\ Determina\ si\ un\ conjunto\ y\ un\ Objeto\ son\ iguales.\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Devuelve\ el\ conjunto\ en\ tipo\ String.\r\n\ @elementsString\ Elementos\ del\ conjunto\ a\ String.\r\n
comment2.params=a
comment2.target=Set\ union(Set)
comment2.text=\r\n\ Operaci\u00F3n\ Unir\ entre\ conjutos\r\n\ @param\ Set\ a\ Conjunto\ a\ Unir\r\n\ @return\ newSet\ Retorna\ la\ union\ del\ conjunto\ de\ llamado\ y\ el\ conjunto\ a\r\n
comment3.params=a
comment3.target=Set\ intersection(Set)
comment3.text=\r\n\ Intersection\ operation\ between\ sets\r\n\ @param\ Set\ a\ the\ set\ with\ which\ we're\ going\ to\ do\ the\ intersection\r\n\ @return\ newSet\ if\ both\ sets\ have\ common\ elements\ it\ will\ return\ the\ new\ intersection\ set,\ otherwise\ the\ void\ set\r\n
comment4.params=a
comment4.target=Set\ difference(Set)
comment4.text=\r\n\ Difference\ operation\ between\ sets\r\n\ @param\ Set\ a\ the\ set\ with\ which\ we're\ going\ to\ do\ the\ difference\r\n\ @return\ solveSet\ being\ the\ set\ who\ contains\ the\ result\ of\ the\ difference\ operation\ between\ this\ set\ and\ set\ a,\ void\ set\ if\ both\ sets\ are\ the\ same\ set\r\n
comment5.params=a
comment5.target=Set\ symmetricDifference(Set)
comment5.text=\r\n\ Symmetric\ difference\ operation\ between\ sets\r\n\ @param\ Set\ a\ the\ set\ with\ which\ we're\ going\ to\ do\ the\ symmetric\ difference\r\n\ @return\ solveSet\ being\ the\ set\ who\ contains\ the\ result\ of\ the\ symmetric\ difference\ operation\ between\ this\ set\ and\ set\ a,\ void\ set\ if\ both\ sets\ are\ the\ same\ set\r\n
comment6.params=a
comment6.target=Set\ cartesianProduct(Set)
comment6.text=\r\n\ Cartesian\ product\ between\ sets\r\n\ @param\ Set\ a\ the\ set\ with\ which\ we're\ going\ to\ do\ the\ cartesian\ product\r\n\ @return\ valuesOfvalues\ if\ both\ sets\ have\ at\ least\ one\ element,\ otherwise\ it\ will\ return\ void\ set\r\n
comment7.params=a
comment7.target=boolean\ subset(Set)
comment7.text=\r\n\ Do\ the\ operation\ of\ "is\ subset\ of"\ between\ two\ sets\r\n\ @param\ Set\ a\ being\ the\ set\ who\ is\ going\ to\ be\ compared\ against\ the\ set\ who\ called\ this\ method\r\n\ @return\ boolean\ true\ if\ this\ set\ is\ subset\ of\ the\ set\ a,\ otherwise\ it\ will\ return\ false\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ @return\ size\ Devuelve\ el\ cardinal\ del\ conjunto.\r\n
comment9.params=element
comment9.target=boolean\ contains(java.lang.String)
comment9.text=\r\n\ Determina\ si\ un\ elemento\ pertenece\ a\ un\ conjunto\r\n\ @return\ boolean\ element\ E\ this\r\n
numComments=13
